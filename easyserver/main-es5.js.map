{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/firebase_config.ts","webpack:///src/app/dialogs/confirmation-dialog.component.ts","webpack:///src/app/dialogs/confirmation-dialog.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dialogs/user-prompt-dialog.component.ts","webpack:///src/app/dialogs/user-prompt-dialog.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","getParam","paramKey","re","RegExp","keyMatches","exec","window","location","href","decodeURIComponent","getFirebaseConfig","route","config","JSON","parse","e","console","error","ConfirmationDialogComponent","data","title","message","action","selector","templateUrl","styleUrls","AppComponent","router","events","pipe","event","subscribe","ev","onNavigationStart","url","navigate","AppModule","declarations","imports","entryComponents","providers","bootstrap","exports","CodeErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","CodeValidator","validCodeMatcher","isValid","isCodeValid","value","validCode","UserPromptDialogComponent","formControl","required","matcher","code","validCodes","includes","routes","path","loadChildren","then","m","TweakModule","SetupModule","AppRoutingModule","forRoot","useHash","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","Error","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'YOUR_INFO_HERE',\n    authDomain: 'YOUR_INFO_HERE',\n    databaseURL: 'YOUR_INFO_HERE',\n    projectId: 'YOUR_INFO_HERE',\n    storageBucket: 'YOUR_INFO_HERE',\n    messagingSenderId: 'YOUR_INFO_HERE'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ActivatedRoute } from '@angular/router';\nimport {environment} from '../environments/environment';\n\n/**\n * Returns the value of the given query param.\n */\nfunction getParam(paramKey: string): string {\n  const re = new RegExp(paramKey + '=([^&]+)', 'i');\n  const keyMatches = re.exec(window.location.href);\n  if (keyMatches) {\n    return decodeURIComponent(keyMatches[1]);\n  }\n\n  return null;\n}\n\n/**\n * Loads the Firebase config from either the URL query params or the environment\n * variables. This allows Easyserver to dynamically load Firebase configs from\n * the URL, instead of having to set up your own server environment.\n */\nexport function getFirebaseConfig(route?: ActivatedRoute): any {\n  const config = getParam('firebase');\n  if (config) {\n    try {\n      return JSON.parse(config);\n    } catch (e) {\n      console.error('Failed to parse Firebase config', e);\n      return null;\n    }\n  }\n\n  if (environment.firebase && environment.firebase.apiKey != 'YOUR_INFO_HERE') {\n    return environment.firebase;\n  }\n\n  return null;\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  getTitle() {\n    return this.data?.title;\n  }\n\n  getMessage() {\n    return this.data?.message;\n  }\n\n  getAction() {\n    return this.data?.action || 'Ok';\n  }\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{getTitle()}}</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <p>{{getMessage()}}</p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close cdkFocusInitial>Cancel</button>\n  <button mat-button [mat-dialog-close]=\"true\">{{getAction()}}</button>\n</mat-dialog-actions>\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router, NavigationStart} from '@angular/router';\n\nimport {filter} from 'rxjs/operators';\n\nimport {getFirebaseConfig} from './firebase_config';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationStart))\n      .subscribe(ev => this.onNavigationStart(ev));\n  }\n\n  onNavigationStart(event) {\n    if (event.url == '/') {\n      if (!getFirebaseConfig(this.route)) {\n        this.router.navigate(['setup']);\n      } else {\n        this.router.navigate(['tweak']);\n      }\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport { ConfirmationDialogComponent } from './dialogs/confirmation-dialog.component';\nimport { UserPromptDialogComponent } from './dialogs/user-prompt-dialog.component';\n\n@NgModule({\n  declarations: [AppComponent, ConfirmationDialogComponent, UserPromptDialogComponent],\n  imports: [\n    BrowserModule, BrowserAnimationsModule, AppRoutingModule,\n    FormsModule, MatButtonModule, MatCardModule, MatToolbarModule,\n    MatDialogModule, MatInputModule, ReactiveFormsModule\n  ],\n  entryComponents: [\n    ConfirmationDialogComponent,\n    UserPromptDialogComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [ConfirmationDialogComponent, UserPromptDialogComponent]\n})\nexport class AppModule {\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nimport {AbstractControl, FormControl, FormGroupDirective, NgForm, Validators, ValidatorFn} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class CodeErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\ninterface ValidCodeMatcher {\n  isCodeValid(code: string): boolean;\n}\n\nfunction CodeValidator(validCodeMatcher: ValidCodeMatcher): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} | null => {\n    const isValid = validCodeMatcher.isCodeValid(control.value);\n    return isValid ? null : {validCode: true} ;\n  };\n}\n\n@Component({\n  selector: 'app-user-prompt-dialog',\n  templateUrl: './user-prompt-dialog.component.html',\n  styleUrls: ['./user-prompt-dialog.component.scss']\n})\nexport class UserPromptDialogComponent implements OnInit, ValidCodeMatcher {\n\n  formControl = new FormControl('', [\n    Validators.required,\n    CodeValidator(this)\n  ]);\n\n  matcher = new CodeErrorStateMatcher();\n\n  getMessage() {\n    return this.data?.message || 'Enter User PIN code';\n  }\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n  isCodeValid(code: string): boolean {\n    return this.data?.validCodes?.includes(code);\n  }\n}\n","<h2 mat-dialog-title></h2>\n<mat-dialog-content class=\"mat-typography\">\n  <p>{{getMessage()}}</p>\n\n  <mat-form-field>\n    <mat-label>Code</mat-label>\n    <input matInput type='text' [(ngModel)]=\"data.code\" [formControl]=\"formControl\" [errorStateMatcher]=\"matcher\" />\n\n    <mat-error *ngIf=\"formControl.hasError('validCode')\">\n      Invalid code\n    </mat-error>\n  </mat-form-field>\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button [mat-dialog-close]=\"data.code\" [disabled]=\"formControl.invalid\">Start</button>\n</mat-dialog-actions>\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'tweak', loadChildren: () => import('./tweak/tweak.module').then(m => m.TweakModule) },\n  { path: 'setup', loadChildren: () => import('./setup/setup.module').then(m => m.SetupModule) }\n];\n\n@NgModule({\n  // Note there are two good reasons for using HashLocationStrategy here:\n  //   1. So the easyserver works on Github pages.\n  //   2. The location hash is never sent to the server, so it can't log your API keys.\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}